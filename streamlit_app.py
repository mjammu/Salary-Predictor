# -*- coding: utf-8 -*-
"""Streamlit App.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dfXOIH_LsOHmYuhyymkhE62VZm5zZFom
"""

import streamlit as st
import pickle
import pandas as pd
import numpy as np

# Load the trained model, feature list, and scaler
model = pickle.load(open('salary_prediction_model_2025.pkl', 'rb'))
feature_names = pickle.load(open('features.pkl', 'rb'))
scaler = pickle.load(open('scaler.pkl', 'rb'))

# Define education mapping
education_mapping = {
    'No degree / Some College': 0,
    'Bachelorâ€™s degree': 2,
    'Masterâ€™s degree': 3,
    'Doctoral/Professional degree': 4
}

# Define coding experience mapping
coding_experience_mapping = {
    'I have never written code': 0,
    '< 1 year': 0.5,
    '1-3 years': 2,
    '3-5 years': 4,
    '5-10 years': 7.5,
    '10-20 years': 15,
    '20+ years': 25
}

# Define country options
country_options = [
    'United States of America', 'India', 'Other', 'Brazil', 'Japan', 'United Kingdom of Great Britain and Northern Ireland', 'Spain'
]

# App title
st.title("ðŸ’¼ Data Scientist Salary Predictor")
st.subheader("ðŸ“ˆ Estimate your salary based on education, experience, country, and programming skills")

# User inputs
education = st.selectbox("Highest Education Level", list(education_mapping.keys()))
years_coding = st.selectbox("Years of Coding Experience", list(coding_experience_mapping.keys()))
country = st.selectbox("Country", country_options)

# Programming languages (checkboxes)
python = st.checkbox("Do you regularly use Python?")
r_lang = st.checkbox("Do you regularly use R?")
sql = st.checkbox("Do you regularly use SQL?")
c_lang = st.checkbox("Do you regularly use C?")
csharp = st.checkbox("Do you regularly use C#?")
cplusplus = st.checkbox("Do you regularly use C++?")
java = st.checkbox("Do you regularly use Java?")
javascript = st.checkbox("Do you regularly use JavaScript?")
bash = st.checkbox("Do you regularly use Bash?")
php = st.checkbox("Do you regularly use PHP?")
matlab = st.checkbox("Do you regularly use MATLAB?")
julia = st.checkbox("Do you regularly use Julia?")
go = st.checkbox("Do you regularly use Go?")
none = st.checkbox("I don't use any programming languages")
other = st.checkbox("I use other programming languages")

# Map inputs
education_num = education_mapping[education]
years_coding_num = coding_experience_mapping[years_coding]

# Initialize input features
input_features = {
    'Education': education_num,
    'Years_Coding': years_coding_num,
    'Python': int(python),
    'R': int(r_lang),
    'SQL': int(sql),
    'C': int(c_lang),
    'C#': int(csharp),
    'C++': int(cplusplus),
    'Java': int(java),
    'Javascript': int(javascript),
    'Bash': int(bash),
    'PHP': int(php),
    'MATLAB': int(matlab),
    'Julia': int(julia),
    'Go': int(go),
    'None': int(none),
    'Other': int(other),
}

# Add country one-hot encoding (initialize all 0)
for c in [col for col in feature_names if col.startswith('Country_')]:
    input_features[c] = 0

# Set the selected country dummy variable
country_col = 'Country_' + country
if country_col in input_features:
    input_features[country_col] = 1

# Create input dataframe
input_df = pd.DataFrame([input_features])

# Scale numeric columns
input_df[['Education', 'Years_Coding']] = scaler.transform(input_df[['Education', 'Years_Coding']])

# Ensure input_df has all columns in correct order
input_df = input_df.reindex(columns=feature_names, fill_value=0)

# Prediction Section
st.markdown("### ðŸ“Š Predicted Salary")

if st.button("ðŸ’µ Predict Salary"):
    salary_pred = model.predict(input_df)[0]
    st.success(f"ðŸ’° Estimated Salary: **${salary_pred:,.2f}**")

st.markdown("---")
st.markdown(
    "<small>Built using Streamlit</small>",
    unsafe_allow_html=True
)